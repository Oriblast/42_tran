version: '3.8'

services:
  db:
    build:
      context: ./db/
    image: "s_postgres"
    container_name: db
    networks:
      - back_v
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ./be
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./be:/app
    ports:
      - "8000:8000"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      VAULT_ADDR: http://vault:8200
    depends_on:
      - db
      - vault

  front:
    build: ./frontend
    container_name: front
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.pnpm-store
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - front_v

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "${NGINX_HTTP_PORT}:8080"
      - "${NGINX_HTTPS_PORT}:8443"
    depends_on:
      - web
      - front
    networks:
      - back_v
      - front_v

  vault:
    image: vault:1.9.3
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    networks:
      - back_v

networks:
  back_v:
    driver: bridge
  front_v:
    driver: bridge

volumes:
  pg_data:
